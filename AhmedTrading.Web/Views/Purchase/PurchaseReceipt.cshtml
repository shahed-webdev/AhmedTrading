@using AhmedTrading.Repository
@model PurchaseReceiptViewModel
@{
    ViewData["Title"] = "Purchase Receipt";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@section Styles{
    <link href="/css/purchase-receipt.css" rel="stylesheet" />
}

<section class="my-4 d-print-none">
    <div class="d-flex justify-content-between">
        <div>
            <button id="btn-delete" class="btn btn-danger btn-rounded" data-id="@Model.PurchaseId"><i class="fas fa-trash mr-1"></i>Delete Permanently</button>
            <div id="force-delete"></div>
        </div>
        <div>
            <a class="btn btn-elegant btn-rounded" href="/Purchase/Purchase"><i class="fas fa-shopping-cart mr-1"></i>Purchase</a>
            <button class="btn btn-amber btn-rounded" onclick="print()"><i class="fas fa-print mr-1"></i>Print</button>
        </div>
    </div>
</section>


<div id="main-page">
    <div id="institution-info" class="mb-4 text-center">
        <h3 class="mb-2">@Model.InstitutionInfo.InstitutionName</h3>
        <p><i class="fas fa-map-marker-alt mr-1"></i>@Model.InstitutionInfo.Address</p>
        <p><i class="fas fa-globe mr-1"></i>@Model.InstitutionInfo.Website, <i class="fas fa-at mr-1"></i>@Model.InstitutionInfo.Email</p>
        <p><i class="fas fa-phone mr-1"></i>@Model.InstitutionInfo.Phone</p>
    </div>

    <div class="row mb-4 receipt-date">
        <div class="col pt-3">
            Memo Number# @Model.MemoNumber
        </div>
        <div class="col text-center">
            <h5>INVOICE - @Model.PurchaseSn</h5>
        </div>
        <div class="col text-right col pt-3">
            Purchase Date: @Model.PurchaseDate.ToString("d MMM yyyy")
        </div>
    </div>

    <div id="vendor-area" class="row">
        <div class="col">
            <h5>Company: <strong>@Model.VendorInfo.VendorCompanyName</strong></h5>
            <h5>Name: <strong>@Model.VendorInfo.VendorName</strong></h5>
        </div>
        <div class="col text-right">
            <h5>Phone: <strong>@Model.VendorInfo.VendorPhone</strong></h5>
            <h5>Address: <strong>@Model.VendorInfo.VendorAddress</strong></h5>
        </div>
    </div>

    <table>
        <thead>
            <tr>
                <th style="width: 30px"><strong>No.</strong></th>
                <th><strong>Product</strong></th>
                <th><strong>Selling U.Price</strong></th>
                <th><strong>Quantity</strong></th>
                <th><strong>Purchase U.Price</strong></th>
                <th><strong>Line Total</strong></th>
            </tr>
        </thead>
        <tbody>
            @{
                var index = 0;
                foreach (var item in Model.Products)
                {
                    index++;
                    <tr>
                        <td>@index</td>
                        <td>
                            <strong>@item.BrandName</strong>
                            <p class="mb-0">@item.ProductName</p>
                        </td>
                        <td>@item.PurchasePrice/-</td>
                        <td>@item.PurchaseQuantity @item.UnitType</td>
                        <td>@item.PurchaseUnitPrice/-</td>
                        <td>@item.PurchasePrice/-</td>
                    </tr>
                }
            }
            <tr>
                <td colspan="5">
                    <span id="amount-word"></span>
                </td>
                <td>
                    <div class="text-right">
                        <h5>Total: <strong>@Model.PurchaseTotalPrice/-</strong></h5>
                        @{
                            var discount = Model.PurchaseDiscountAmount;

                            if (discount > 0)
                            {
                                <h5>Discount: <strong>@Model.PurchaseDiscountAmount/-</strong></h5>
                            }
                        }

                        <h5>Paid: <strong> @Model.PurchasePaidAmount/-</strong></h5>
                        <h5>Due: <strong>@Model.PurchaseDueAmount/-</strong></h5>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>


    @{
        var paymentRecord = Model.Payments;

        if (paymentRecord.Count > 0)
        {
            <h5 class="mt-4">PAYMENT RECORD</h5>
            <table>
                <thead>
                    <tr>
                        <th><strong>Paid Date</strong></th>
                        <th><strong>Paid Amount</strong></th>
                        <th><strong>Payment Method</strong></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in paymentRecord)
                    {
                        <tr>
                            <td>@item.PaidDate.ToString("d MMM yyyy")</td>
                            <td class="text-right">@item.PaidAmount/-</td>
                            <td class="text-center">@item.PaymentMethod</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }

    @*<div class="p-footer">
            <div class="row">
                <div class="col">
                    Received By
                    <small class="d-block text-muted">@DateTime.Now.ToString("ddd, dd-MMM-yyyy (hh: mm tt)")</small>
                </div>
                <div class="col text-center font-weight-bold">
                    Thank you for your business!
                    <small class="d-block text-muted">Technical support: www.loopsit.com</small>
                </div>

                <div class="col text-right">
                    For: <strong>@Model.InstitutionInfo.InstitutionName</strong>
                    <small class="d-block text-muted">Served By: <strong>@Model.SoildBy</strong></small>
                </div>
            </div>
        </div>*@
</div>


@section scripts{
    <script src="~/js/amount-in-word.js"></script>
    <script>
        $(function() {
            $("#amount-word").text(`Taka (in word): ${number2text(@Model.PurchaseTotalPrice).toLowerCase()}`);
        });

        const btnDelete = document.getElementById('btn-delete');

        btnDelete.addEventListener('click', function(evt) {
            const id = +this.getAttribute('data-id');
            const url = '/Purchase/DeleteReceipt';
            const parameter = { params: { id } };
            const request = axios.get(url, parameter);
            const forceDeleteContainer = document.getElementById('force-delete');

            forceDeleteContainer.innerHTML = '';

            request.then(response => {
                if (!response.data.IsSuccess) {
                    forceDeleteContainer.innerHTML = `<span class="red-text">${response.data.Message} <a data-id="@Model.PurchaseId" onclick="onDeleteClick(this)" class="blue-text"><i class="fas fa-trash mr-1"></i>force delete</a></span>`;
                    return;
                }

                forceDelete(id);

            }).catch(err => console.log(err));
        });

        //force delete click
        function onDeleteClick(evt) {
            const id = +evt.getAttribute('data-id');
            forceDelete(id);
        }

        //force delete post
        function forceDelete(id) {
            const url = `/Purchase/ForceDeleteReceipt/${id}`;
            const request = axios.post(url);

            request.then(response => {
                if (response.data.IsSuccess)
                    location.href = `/Purchase/PurchaseRecords`;

            }).catch(err => console.log(err));
        }
    </script>
}

