@using AhmedTrading.Repository
@model ProductViewModel
@{
    ViewData["Title"] = "Add Product Info";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <style>
        .remove { cursor: pointer }
        .remove:hover { color: #ff0000 }
    </style>  
}

<div class="m-md-3">
    <h4 class="mb-3 page-header">Add Product Info</h4>

    <section class="card card-body">
        <form id="formProduct" asp-action="AddProduct">
            <div class="form-row">
                <div class="col-lg-3">
                    <div class="md-form">
                        <select name="ProductBrand" id="ProductBrand" asp-items="ViewBag.ProductBrand" class="mdb-select" required>
                            <option value="" selected>Select Brand</option>
                        </select>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="md-form">
                        <input asp-for="ProductName" class="form-control" required />
                        <label for="ProductName">Product Name</label>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="md-form">
                        <input asp-for="SellingUnitPrice" class="form-control" type="number" required/>
                        <label for="SellingUnitPrice">Selling Unit Price</label>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="md-form">
                        <input asp-for="UnitType" class="form-control" required/>
                        <label for="UnitType">Unit Type</label>
                    </div>
                </div>
            </div>
            <div class="text-right">
                <input type="submit" value="Add Product" class="btn blue-bg-btn" />
            </div>
        </form>
    </section>

    <section class="card card-body mt-3">
        <h4 id="categoryName"></h4>

        <table class="table">
            <thead>
                <tr>
                    <th><strong>Product Name</strong></th>
                    <th><strong>Selling Unit Price</strong></th>
                    <th><strong>Unit Type</strong></th>
                    <th><strong>Stock</strong></th>
                    <th><strong>Remove</strong></th>
                </tr>
            </thead>
            <tbody id="tbody"></tbody>
        </table>
    </section>
</div>

@section Scripts{
    <script>
        // Material Select Initialization
        $('.mdb-select').materialSelect();

        // selectors
        const ProductBrand = document.getElementById('ProductBrand');
        const tbody = document.getElementById('tbody');

        // functions
        const getProductsInfo = function(brandId = 0) {
            const url = '/Product/GetProductByBrand'
            const param = { params: { brandId } };

            axios.get(url, param).then(res => {
                let html = '';
                res.data.forEach(item => {
                    html += `<tr>
                        <td class="text-left">${item.ProductName}</td>
                        <td>${item.SellingUnitPrice}</td>
                        <td>${item.UnitType}</td>
                        <td class="text-left">${item.Stock}</td>
                        <td style="width:50px; text-align:center"><i class="fa fa-trash-alt remove red-text" id="${item.ProductId}"></i></td>
                        </tr>`
                })

                tbody.innerHTML = ''
                tbody.innerHTML = html
            }).catch(err => console.log(err))
        }

        //on change dropdown
        const onCategoryChanged = function() {
            const brandId = +this.value;
            if (!brandId) return;

            const categoryName = document.getElementById('categoryName')
            categoryName.textContent = this.options[this.selectedIndex].text;

            getProductsInfo(brandId);
        }

        //remove
        const onRemoveClicked = function(e) {
            const clicked = e.target.classList.contains('remove');
            if (!clicked) return;

            const id = e.target.id
            const url = '/Product/DeleteProduct'
            const param = { params: { id } };

            axios.get(url, param).then(res => {
                if (res.data !== -1) {
                    e.target.parentElement.parentElement.remove();
                } else {
                    alert('this product already used!')
                }
            }).catch(err => console.log(err))
        }

        // call function
        getProductsInfo()

        // event
        ProductBrand.addEventListener('change', onCategoryChanged)
        tbody.addEventListener('click', onRemoveClicked)
    </script>
}
