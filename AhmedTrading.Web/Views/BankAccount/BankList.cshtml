
@{
    ViewData["Title"] = "Bank List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section Styles
{
    <style>
        .account-name { cursor: pointer }
        .account-name:hover { color: #4992df; }

        .inputName { border: 1px solid #B6B4B4; border-radius: 3px; padding: 6px; text-align: center; box-shadow: 1px 0 7px rgba(0, 0, 0, 0.2); width: 100% }
        .inputName:focus { border: 1px solid #00bfff }
    </style>
}
<div class="m-md-3">
    <div class="row">
        <div class="col justify-content-center align-self-center">
            <h4 class="page-header">Bank List</h4>
        </div>
        <div class="col text-right">
            <a id="CreateClick" data-url="/BankAccount/Create" class="btn-floating blue-bg-btn" title="Add New" data-toggle="modal">
                <i class="fa fa-plus" aria-hidden="true"></i>
            </a>
        </div>
    </div>

    <div class="card card-body">
        <table id="data-table" class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th>Account Name</th>
                    <th>Balance</th>
                    <th style="width: 50px">Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<!-- Insert Modal -->
<div class="modal fade" id="InsertModal" tabindex="-1" role="dialog" aria-hidden="true"></div>


@section scripts{
    <partial name="_UnobtrusiveAjaxPartial" />

    <script>
        $(function () {
            dataTable.getData();
        });

        //get data
        var dataTable = {
            table: null,
            init: function () {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/BankAccount/BankListData",
                        type: "POST"
                    },
                    columns:
                        [
                            {
                                data: "AccountName", "render": function (data, type, row, meta) {
                                    return `<div class="account-name" data-old="${data}" data-id="${row.BankAccountId}">${data}</div>`;
                                }
                            },
                            { data: "Balance", "render": dataTable.addSign },
                            { data: "BankAccountId", "render": function (data) { return `<a style="color:#ff0000" class="delete fas fa-trash-alt" href="/BankAccount/Delete/${data}"></a>`; } }
                        ]
                });
            },
            getData: function () {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function (data) { return `${data}/-` }
        }

        //Insert
        $("#CreateClick").on("click", function () {
            $.get($(this).data("url"), function (data) {
                $('#InsertModal').html(data).modal('show');
            });
        });

        function onCreateSuccess(data) {
            if (!data.Status) {
                $('#InsertModal').html(data);
                return;
            }

            $('#InsertModal').html(data).modal('hide');
            dataTable.getData();
        }

        //Delete click
        $('#data-table').on("click", ".delete", function (evt) {
            evt.preventDefault();

            var row = $(this).closest("tr");
            var btnDelete = $(this);
            const url = $(this).attr('href');

            if (!url) return;

            if (confirm("Are you sure you want to delete?")) {
                $.post(url, function (response) {
                    if (!response) {
                        alert('This data already used in others place');
                        btnDelete.removeAttr("href");
                        return;
                    }
                    row.hide();
                });
            }
        });

        //inline update
        const tBody = document.getElementById('data-table');
        tBody.addEventListener('click', function (evt) {
            const element = evt.target;

            const onMemo = element.classList.contains('account-name');
            if (!onMemo) return;
            const old = element.getAttribute('data-old');

            const html = `<form onsubmit="return updateName(this)">
                    <input name="inputName" value="${old}" class="inputName" type="text" />
                </form>`;

            element.innerHTML = html;
        });

        function updateName(form) {
            const id = +form.parentElement.getAttribute('data-id');
            const newValue = form.inputName.value;

            if (!newValue) return;
            const model = { BankAccountId: id, AccountName: newValue }
            const url = '/BankAccount/UpdateBankName';
      
            const options = {
                method: 'POST',
                url: url,
                data: model
            }

            axios(options).then(response => {
                form.parentElement.innerText = newValue;
                form.remove();
            }).catch(error => {
                console.log(error.response);
                alert(error.response.data.Message);
            })

            return false;
        }
    </script>
}

