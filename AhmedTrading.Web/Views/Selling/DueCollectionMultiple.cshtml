@using AhmedTrading.Repository
@model IEnumerable<CustomerSellingViewModel>
@{
    ViewData["Title"] = "Multiple Due Collection";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{

}

<div class="container">
    <div class="card card-body">
        <section class="my-4 d-print-none">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="page-header"></h4>
                <h4 class="page-header">Total Due</h4>
            </div>
        </section>

        <table class="product-tb table table-sm table-bordered mt-5">
            <thead>
            <tr>
                <th><strong>SN</strong></th>
                <th><strong>#Bill No</strong></th>
                <th><strong>Amount</strong></th>
                <th><strong>Transport Cost</strong></th>
                <th><strong>Discount</strong></th>
                <th><strong>Paid</strong></th>
                <th><strong>Due</strong></th>
                <th><strong>Date</strong></th>
            </tr>
            </thead>
            <tbody>
            @{
                var index = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@index</td>
                        <td class="text-center">@item.SellingSn</td>
                        <td class="text-center">@item.SellingAmount</td>
                        <td class="text-right">@item.TransportationCost/-</td>
                        <td class="text-right">@item.SellingDiscountAmount/-</td>
                        <td class="text-right">@item.SellingPaidAmount/-</td>
                        <td class="text-right">@item.SellingDueAmount/-</td>
                        <td class="text-right">@item.SellingDate.ToString("d MMM yyyy")</td>
                    </tr>
                    index++;
                }
            }
            </tbody>
        </table>
        
        <form id="formPaid">
            <div class="form-inline">
                <div class="md-form">
                    <input id="inputPaid" required type="number" class="form-control" placeholder="Total Paid Amount" />
                </div>
                <div class="md-form mx-3">
                    <input id="inputDate" placeholder="Paid Date" type="text" class="form-control datepicker" />
                </div>
                <div class="md-form">
                    <select id="selectPaymentMethod" required class="mdb-select mb-0 mt-1 mr-2">
                        <option>Cash</option>
                        <option>Bank</option>
                        <option>Cheque</option>
                        <option>bkash</option>
                    </select>
                </div>
                <div class="md-form">
                    <input id="submitPaid" type="submit" class="btn btn-blue" value="Paid" />
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts{
    <script>
        $(function () {
            $(".mdb-select").materialSelect();
            $(".datepicker").pickadate().val(moment(new Date()).format("DD MMMM, YYYY"));
        });

        //selectors
        const formPaid = document.getElementById("formPaid");
        const inputTotalPaid = formPaid.inputPaid;
        const inputDate = formPaid.inputDate;
        const selectPaymentMethod = formPaid.selectPaymentMethod;

        //events
        inputTotalPaid.addEventListener("input", function(e) {
            const totalDue = parseNumber(dueContent.textContent);
            var totalPaid = parseNumber(e.target.value);
            this.setAttribute("max", totalDue);

            for (var i = 1, row; (row = table.rows[i]); i++) {
                const due = row.cells[5].innerHTML;

                if (totalPaid < due && totalPaid > 0) {
                    row.cells[6].innerHTML = totalPaid;
                } else if (totalPaid >= due) {
                    row.cells[6].innerHTML = due;
                } else {
                    row.cells[6].innerHTML = 0;
                }
                totalPaid -= due;
            }

            if (totalDue < totalPaid) {
                this.value = totalDue;
                return;
            }
        })
    </script>
}